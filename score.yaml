apiVersion: score.dev/v1b1

metadata:
  name: backstage

service:
  ports:
    backstage:
      port: 7007
      targetPort: 7007

containers:
  backstage:
    command:
      - "node"
    args:
      - packages/backend
      - "--config"
      - app-config.yaml
      - "--config"
      - app-config.production.yaml
    image: .
    resources:
      limits:
        cpu: "1"
        memory: 1024Mi
      requests:
        cpu: "0.025"
        memory: 64Mi
    variables:
      APP_CONFIG_app_baseUrl: https://${resources.dns.host}
      APP_CONFIG_backend_baseUrl: https://${resources.dns.host}
      APP_CONFIG_backend_cors_origin: https://${resources.dns.host}
      GITHUB_ORG_ID: ${resources.env.GITHUB_ORG_ID}
      GITHUB_APP_CLIENT_ID: ${resources.env.GITHUB_APP_CLIENT_ID}
      GITHUB_APP_CLIENT_SECRET: ${resources.env.GITHUB_APP_CLIENT_SECRET}
      HUMANITEC_ORG_ID: ${resources.env.HUMANITEC_ORG_ID}
      HUMANITEC_TOKEN: ${resources.env.HUMANITEC_TOKEN}
      POSTGRES_HOST: ${resources.db.host}
      POSTGRES_PASSWORD: ${resources.db.password}
      POSTGRES_PORT: ${resources.db.port}
      POSTGRES_USER: ${resources.db.username}
      CLOUD_PROVIDER: ${resources.env.CLOUD_PROVIDER}

    files:
      - target: /app/credentials/github-app-backstage-humanitec-credentials.yaml
        mode: "0644"
        content: |
          # Name: Backstage-Humanitec
          appId: ${resources.env.GITHUB_APP_ID}
          webhookUrl: https://${externals.dns.host}
          clientId: ${resources.env.GITHUB_APP_CLIENT_ID}
          clientSecret: ${resources.env.GITHUB_APP_CLIENT_SECRET}
          webhookSecret: ${resources.env.GITHUB_APP_WEBHOOK_SECRET}
          privateKey: |
            ${resources.env.GITHUB_APP_PRIVATE_KEY}

    volumes:
    - source: volumes.tmp
      target: /tmp
      read_only: false

resources:
  env:
    type: environment
  dns:
    type: dns
  route:
    type: route
    params:
      host: ${resources.dns.host}
      path: /
      port: 7007
  db:
    type: postgres
